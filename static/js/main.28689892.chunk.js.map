{"version":3,"sources":["misc/firebase.js","pages/SignIn.js","misc/custom-hooks.js","context/profile.context.js","components/EditableInput.js","components/dashboard/ProviderBlock.js","misc/helpers.js","components/ProfileAvatar.js","components/dashboard/AvatarUploadBtn.js","components/dashboard/index.js","components/dashboard/DashboardToggle.js","components/CreateRoomBtnModal.js","components/rooms/RoomItem.js","context/rooms.context.js","components/rooms/ChatRoomList.js","components/Sidebar.js","context/current-room.context.js","components/chat-window/top/EditRoomBtnDrawer.js","components/chat-window/top/RoomInfoBtnModal.js","components/chat-window/top/index.js","components/chat-window/bottom/AttachmentBtnModal.js","components/chat-window/bottom/AudioMsgBtn.js","components/chat-window/bottom/index.js","components/chat-window/messages/ProfileInfoBtnModal.js","components/PresenceDot.js","components/chat-window/messages/IconBtnControl.js","components/chat-window/messages/ImgBtnModal.js","components/chat-window/messages/MessageItem.js","components/chat-window/messages/index.js","pages/Home/chat.js","pages/Home/index.js","components/PrivateRoute.js","components/PublicRoute.js","App.js","index.js"],"names":["app","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","database","storage","SignIn","signInWithProvider","provider","a","signInWithPopup","additionalUserInfo","user","isNewUser","ref","uid","set","name","displayName","createdAt","ServerValue","TIMESTAMP","Alert","success","error","message","Container","Grid","className","Row","Col","xs","md","mdOffset","Panel","Button","block","color","onClick","FacebookAuthProvider","Icon","icon","GoogleAuthProvider","useModalState","defaultValue","useState","isOpen","setIsOpen","open","useCallback","close","useMediaQuery","query","window","matchMedia","matches","setMatches","useEffect","queryList","listener","evt","addListener","removeListener","isOfflineForDatabase","state","last_changed","isOnlineForDatabase","ProfileContext","createContext","ProfileProvider","children","profile","setProfile","isLoading","setIsLoading","userRef","userStatusRef","authUnsub","onAuthStateChanged","authObj","console","log","on","snap","val","data","avatar","email","snapshot","onDisconnect","then","off","Provider","value","useProfile","useContext","EditableInput","initialValue","onSave","label","placeholder","emptyMsg","wrapperClassName","inputProps","input","setInput","isEditable","setIsEditable","onInputChange","onEditClick","p","onSaveClick","trimmed","trim","info","InputGroup","Input","disabled","onChange","ProviderBlock","currentUser","providerData","some","providerId","isConnected","setIsConnected","updateIsConnected","unlink","length","Error","link","linkWithPopup","Tag","closable","onClose","getNameInitials","splitName","toUpperCase","split","transformToArrWithId","snapVal","Object","keys","map","roomId","id","getUserUpdates","userId","keyToUpdate","db","updates","getMsgs","orderByChild","equalTo","once","getRooms","Promise","all","mSnap","rSnap","forEach","msgSnap","key","roomSnap","ProfileAvatar","avatarProps","Avatar","circle","acceptedFileTypes","getBlob","canvas","resolve","reject","toBlob","blob","AvatarUploadBtn","img","setImg","avatarEditorRef","useRef","onUploadClick","current","getImageScaledToCanvas","avatarFileRef","child","put","cacheControl","uploadAvatarResult","getDownloadURL","downloadUrl","update","src","htmlFor","type","accept","ev","currFiles","target","files","file","includes","isValidFile","warning","Modal","show","onHide","Header","Title","Body","image","width","height","border","borderRadius","rotate","Footer","appearance","Dashboard","onSignOut","newData","Drawer","Divider","DashboardToggle","isMobile","signOut","catch","err","full","placement","StringType","Schema","Types","model","Model","isRequired","description","INITIAL_FORM","CreateRoomBtnModal","formValue","setFormValue","formRef","onFormChange","onSubmit","check","newRoomdata","admin","push","Form","fluid","FormGroup","ControlLabel","FormControl","componentClass","rows","RoomItem","room","lastMessage","datetime","Date","author","size","text","RoomsContext","RoomsProvider","rooms","setRooms","roomListRef","useRooms","ChatRoomList","aboveElHeight","location","useLocation","Nav","vertical","reversed","style","activeKey","pathname","Loader","center","content","speed","Item","Link","to","eventKey","Sidebar","topSidebarRef","setHeight","scrollHeight","CurrentRoomContext","CurrentRoomProvider","useCurrentRoom","selector","useContextSelector","EditRoomBtnDrawer","chatId","useParams","v","updateData","newName","newDesc","memo","RoomInfoBtnModal","ChatTop","isAdmin","ButtonToolbar","AttachmentBtnModal","afterUpload","fileList","setFileList","onUpload","uploadPromises","f","now","blobFile","uploadSnapshots","shapePromises","metadata","contentType","url","Uploader","autoUpload","action","fileArr","filtered","filter","el","slice","multiple","listType","AudioMsgBtn","isRecording","setIsRecording","isUploading","setIsUploading","record","onStop","mimeType","assembleMessage","likeCount","Bottom","onSendClick","msgData","messageId","msgId","lastMsgId","pop","onKeyDown","keyCode","preventDefault","ProfileInfoBtnModal","btnProps","shortName","memberSince","toLocaleDateString","getColor","presence","getText","PresenceDot","setPresence","exists","usePresence","Whisper","trigger","speaker","Tooltip","Badge","backgroundColor","ConditionalBadge","condition","IconBtnControl","isVisible","iconName","tooltip","badgeContent","props","visibility","delay","delayHide","delayShow","IconButton","ImgBtnModal","fileName","alt","href","rel","renderFileMessage","controls","MessageItem","handleAdmin","handleLike","handleDelete","likes","setValue","handleMouseOver","handleMouseOut","node","addEventListener","removeEventListener","useHover","selfRef","isHovered","isMsgAuthorAdmin","isAuthor","canGrantAdmin","canShowIcons","isLiked","messagesRef","Messages","messages","setMessages","limit","setLimit","isChatEmpty","canShowMessages","loadMessages","limitToLast","threshold","scrollTop","clientHeight","shouldScrollToBottom","onLoadMore","oldHeight","setTimeout","newHeight","adminRef","transaction","alertMsg","messageRef","msg","confirm","isLast","fileRef","refFromURL","delete","groupingKeyFn","groups","item","toDateString","reduce","result","groupingKey","items","date","msgs","renderMessages","Chat","currentRoom","find","currentRoomData","Home","isDesktop","isExact","useRouteMatch","canRenderSidebar","exact","path","PrivateRoute","routeProps","App","PublicRoute","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.28689892.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\nimport 'firebase/storage';\r\n\r\nconst config = {\r\n    \r\n        apiKey: \"AIzaSyCB7C5gt0mB62chP4Hk_9R2TJ_HHoKgXC4\",\r\n        authDomain: \"chat-web-app-fe28e.firebaseapp.com\",\r\n        projectId: \"chat-web-app-fe28e\",\r\n        storageBucket: \"chat-web-app-fe28e.appspot.com\",\r\n        messagingSenderId: \"554331703565\",\r\n        appId: \"1:554331703565:web:dae08eba38af5d5b4f4844\"\r\n      \r\n};\r\n\r\nconst app = firebase.initializeApp(config);\r\nexport const auth = app.auth();\r\nexport const database = app.database();\r\nexport const storage = app.storage();","import React from 'react';\r\nimport firebase from 'firebase/app';\r\nimport { Col, Container, Grid, Panel, Row, Button, Icon, Alert } from 'rsuite';\r\nimport { auth, database } from '../misc/firebase';\r\n\r\nfunction SignIn() {\r\n  const signInWithProvider = async provider => {\r\n    try {\r\n      const { additionalUserInfo, user } = await auth.signInWithPopup(provider);\r\n\r\n      if (additionalUserInfo.isNewUser) {\r\n        await database.ref(`/profiles/${user.uid}`).set({\r\n          name: user.displayName,\r\n          createdAt: firebase.database.ServerValue.TIMESTAMP,\r\n        });\r\n      }\r\n\r\n      Alert.success('Signed in', 4000);\r\n    } catch (err) {\r\n      Alert.error(err.message, 4000);\r\n    }\r\n  };\r\n\r\n  const onFacebookSignIn = () => {\r\n    signInWithProvider(new firebase.auth.FacebookAuthProvider());\r\n  };\r\n\r\n  const onGoogleSignIn = () => {\r\n    signInWithProvider(new firebase.auth.GoogleAuthProvider());\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Grid className=\"mt-page\">\r\n        <Row>\r\n          <Col xs={24} md={12} mdOffset={6}>\r\n            <Panel>\r\n              <div className=\"text-center\">\r\n                <h2>Welcome to Chat</h2>\r\n                <p>Progressive chat platform for neophytes</p>\r\n              </div>\r\n\r\n              <div className=\"mt-3\">\r\n                <Button block color=\"blue\" onClick={onFacebookSignIn}>\r\n                  <Icon icon=\"facebook\" /> Continue with Facebook\r\n                </Button>\r\n\r\n                <Button block color=\"green\" onClick={onGoogleSignIn}>\r\n                  <Icon icon=\"google\" /> Continue with Google\r\n                </Button>\r\n              </div>\r\n            </Panel>\r\n          </Col>\r\n        </Row>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default SignIn;\r\n","import { useState, useCallback, useEffect, useRef } from 'react';\r\nimport { database } from './firebase';\r\n\r\nexport function useModalState(defaultValue = false) {\r\n  const [isOpen, setIsOpen] = useState(defaultValue);\r\n\r\n  const open = useCallback(() => setIsOpen(true), []);\r\n  const close = useCallback(() => setIsOpen(false), []);\r\n\r\n  return { isOpen, open, close };\r\n}\r\n\r\nexport const useMediaQuery = query => {\r\n  const [matches, setMatches] = useState(\r\n    () => window.matchMedia(query).matches\r\n  );\r\n\r\n  useEffect(() => {\r\n    const queryList = window.matchMedia(query);\r\n    setMatches(queryList.matches);\r\n\r\n    const listener = evt => setMatches(evt.matches);\r\n\r\n    queryList.addListener(listener);\r\n    return () => queryList.removeListener(listener);\r\n  }, [query]);\r\n\r\n  return matches;\r\n};\r\n\r\nexport function usePresence(uid) {\r\n  const [presence, setPresence] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const userStatusRef = database.ref(`/status/${uid}`);\r\n\r\n    userStatusRef.on('value', snap => {\r\n      if (snap.exists()) {\r\n        const data = snap.val();\r\n\r\n        setPresence(data);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      userStatusRef.off();\r\n    };\r\n  }, [uid]);\r\n\r\n  return presence;\r\n}\r\n\r\nexport function useHover() {\r\n  const [value, setValue] = useState(false);\r\n\r\n  const ref = useRef(null);\r\n\r\n  const handleMouseOver = () => setValue(true);\r\n  const handleMouseOut = () => setValue(false);\r\n\r\n  useEffect(\r\n    () => {\r\n      const node = ref.current;\r\n      if (node) {\r\n        node.addEventListener('mouseover', handleMouseOver);\r\n        node.addEventListener('mouseout', handleMouseOut);\r\n      }\r\n      return () => {\r\n        node.removeEventListener('mouseover', handleMouseOver);\r\n        node.removeEventListener('mouseout', handleMouseOut);\r\n      };\r\n    },\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    [ref.current] // Recall only if ref changes\r\n  );\r\n\r\n  return [ref, value];\r\n}","import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport firebase from 'firebase/app';\r\nimport { auth, database } from '../misc/firebase';\r\n\r\nexport const isOfflineForDatabase = {\r\n  state: 'offline',\r\n  last_changed: firebase.database.ServerValue.TIMESTAMP,\r\n};\r\n\r\nconst isOnlineForDatabase = {\r\n  state: 'online',\r\n  last_changed: firebase.database.ServerValue.TIMESTAMP,\r\n};\r\n\r\nconst ProfileContext = createContext();\r\n\r\nexport function ProfileProvider({ children }) {\r\n  const [profile, setProfile] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    let userRef;\r\n    let userStatusRef;\r\n\r\n    const authUnsub = auth.onAuthStateChanged(authObj => {\r\n      if (authObj) {\r\n        console.log('authObj.uid', authObj.uid);\r\n        userStatusRef = database.ref(`/status/${authObj.uid}`);\r\n        userRef = database.ref(`/profiles/${authObj.uid}`);\r\n\r\n        userRef.on('value', snap => {\r\n          const { name, createdAt, avatar } = snap.val();\r\n\r\n          const data = {\r\n            name,\r\n            createdAt,\r\n            avatar,\r\n            uid: authObj.uid,\r\n            email: authObj.email,\r\n          };\r\n\r\n          setProfile(data);\r\n          setIsLoading(false);\r\n        });\r\n\r\n        database.ref('.info/connected').on('value', snapshot => {\r\n          if (!!snapshot.val() === false) {\r\n            return;\r\n          }\r\n\r\n          userStatusRef\r\n            .onDisconnect()\r\n            .set(isOfflineForDatabase)\r\n            .then(() => {\r\n              userStatusRef.set(isOnlineForDatabase);\r\n            });\r\n        });\r\n\r\n      } else {\r\n        if (userRef) {\r\n          userRef.off();\r\n        }\r\n\r\n        if (userStatusRef) {\r\n          userStatusRef.off();\r\n        }\r\n\r\n        database.ref('.info/connected').off();\r\n\r\n        setProfile(null);\r\n        setIsLoading(false);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      authUnsub();\r\n\r\n      database.ref('.info/connected').off();\r\n\r\n      if (userRef) {\r\n        userRef.off();\r\n      }\r\n\r\n      if (userStatusRef) {\r\n        userStatusRef.off();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <ProfileContext.Provider value={{ isLoading, profile }}>\r\n      {children}\r\n    </ProfileContext.Provider>\r\n  );\r\n}\r\n\r\nexport const useProfile = () => useContext(ProfileContext);","import React, { useState, useCallback } from 'react';\r\nimport { Input, InputGroup, Icon, Alert } from 'rsuite';\r\n\r\nfunction EditableInput({\r\n  initialValue,\r\n  onSave,\r\n  label = null,\r\n  placeholder = 'Write your value',\r\n  emptyMsg = 'Input is empty',\r\n  wrapperClassName = '', \r\n  ...inputProps\r\n}) {\r\n  const [input, setInput] = useState(initialValue);\r\n  const [isEditable, setIsEditable] = useState(false);\r\n\r\n  const onInputChange = useCallback(value => {\r\n    setInput(value);\r\n  }, []);\r\n\r\n  const onEditClick = useCallback(() => {\r\n    setIsEditable(p => !p);\r\n    setInput(initialValue);\r\n  }, [initialValue]);\r\n\r\n  const onSaveClick = async () => {\r\n    const trimmed = input.trim();\r\n\r\n    if (trimmed === '') {\r\n      Alert.info(emptyMsg, 4000);\r\n    }\r\n\r\n    if (trimmed !== initialValue) {\r\n      await onSave(trimmed);\r\n    }\r\n\r\n    setIsEditable(false);\r\n  };\r\n\r\n  return (\r\n    <div className={wrapperClassName}>\r\n      {label}\r\n      <InputGroup>\r\n        <Input\r\n          {...inputProps}\r\n          disabled={!isEditable}\r\n          placeholder={placeholder}\r\n          value={input}\r\n          onChange={onInputChange}\r\n        />\r\n        <InputGroup.Button onClick={onEditClick}>\r\n          <Icon icon={isEditable ? 'close' : 'edit2'} />\r\n        </InputGroup.Button>\r\n        {isEditable && (\r\n          <InputGroup.Button onClick={onSaveClick}>\r\n            <Icon icon=\"check\" />\r\n          </InputGroup.Button>\r\n        )}\r\n      </InputGroup>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default EditableInput;","import React, { useState } from 'react';\r\nimport { Tag, Icon, Button, Alert } from 'rsuite';\r\nimport firebase from 'firebase/app';\r\nimport { auth } from '../../misc/firebase';\r\n\r\nfunction ProviderBlock() {\r\n  const [isConnected, setIsConnected] = useState({\r\n    'google.com': auth.currentUser.providerData.some(\r\n      data => data.providerId === 'google.com'\r\n    ),\r\n    'facebook.com': auth.currentUser.providerData.some(\r\n      data => data.providerId === 'facebook.com'\r\n    ),\r\n  });\r\n\r\n  const updateIsConnected = (providerId, value) => {\r\n    setIsConnected(p => {\r\n      return {\r\n        ...p,\r\n        [providerId]: value,\r\n      };\r\n    });\r\n  };\r\n\r\n  const unlink = async providerId => {\r\n    try {\r\n      if (auth.currentUser.providerData.length === 1) {\r\n        throw new Error(`You can not disconnect from ${providerId}`);\r\n      }\r\n\r\n      await auth.currentUser.unlink(providerId);\r\n      updateIsConnected(providerId, false);\r\n      Alert.info(`Disconnected from ${providerId}`, 4000);\r\n    } catch (err) {\r\n      Alert.error(err.message, 4000);\r\n    }\r\n  };\r\n\r\n  const unlinkFacebook = () => {\r\n    unlink('facebook.com');\r\n  };\r\n  const unlinkGoogle = () => {\r\n    unlink('google.com');\r\n  };\r\n\r\n  const link = async provider => {\r\n    try {\r\n      await auth.currentUser.linkWithPopup(provider);\r\n      Alert.info(`Linked to ${provider.providerId}`, 4000);\r\n      updateIsConnected(provider.providerId, true);\r\n    } catch (err) {\r\n      Alert.error(err.message, 400);\r\n    }\r\n  };\r\n\r\n  const linkFacebook = () => {\r\n    link(new firebase.auth.FacebookAuthProvider());\r\n  };\r\n  const linkGoogle = () => {\r\n    link(new firebase.auth.GoogleAuthProvider());\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {isConnected['google.com'] && (\r\n        <Tag color=\"green\" closable onClose={unlinkGoogle}>\r\n          <Icon icon=\"google\" /> Connected\r\n        </Tag>\r\n      )}\r\n      {isConnected['facebook.com'] && (\r\n        <Tag color=\"blue\" closable onClose={unlinkFacebook}>\r\n          <Icon icon=\"facebook\" /> Connected\r\n        </Tag>\r\n      )}\r\n\r\n      <div className=\"mt-2\">\r\n        {!isConnected['google.com'] && (\r\n          <Button block color=\"green\" onClick={linkGoogle}>\r\n            <Icon icon=\"google\" /> Link to Google\r\n          </Button>\r\n        )}\r\n\r\n        {!isConnected['facebook.com'] && (\r\n          <Button block color=\"blue\" onClick={linkFacebook}>\r\n            <Icon icon=\"facebook\" /> Link to Facebook\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProviderBlock;","export function getNameInitials(name) {\r\n  const splitName = name.toUpperCase().split(' ');\r\n\r\n  if(splitName.length > 1){\r\n      return splitName[0][0] + splitName[1][0];\r\n  }\r\n\r\n  return splitName[0][0];\r\n}\r\n\r\nexport function transformToArr(snapVal) {\r\nreturn snapVal ? Object.keys(snapVal) : [];\r\n}\r\n\r\n\r\nexport function transformToArrWithId(snapVal) {\r\n  return snapVal\r\n    ? Object.keys(snapVal).map(roomId => {\r\n        return { ...snapVal[roomId], id: roomId };\r\n      })\r\n    : [];\r\n}\r\n\r\nexport async function getUserUpdates(userId, keyToUpdate, value, db) {\r\n  const updates = {};\r\n\r\n  updates[`/profiles/${userId}/${keyToUpdate}`] = value;\r\n\r\n  const getMsgs = db\r\n    .ref('/messages')\r\n    .orderByChild('author/uid')\r\n    .equalTo(userId)\r\n    .once('value');\r\n\r\n  const getRooms = db\r\n    .ref('/rooms')\r\n    .orderByChild('lastMessage/author/uid')\r\n    .equalTo(userId)\r\n    .once('value');\r\n\r\n  const [mSnap, rSnap] = await Promise.all([getMsgs, getRooms]);\r\n\r\n  mSnap.forEach(msgSnap => {\r\n    updates[`/messages/${msgSnap.key}/author/${keyToUpdate}`] = value;\r\n  });\r\n\r\n  rSnap.forEach(roomSnap => {\r\n    updates[`/rooms/${roomSnap.key}/lastMessage/author/${keyToUpdate}`] = value;\r\n  });\r\n\r\n  return updates;\r\n}  \r\n\r\nexport function groupBy(array, groupingKeyFn) {\r\n  return array.reduce((result, item) => {\r\n    const groupingKey = groupingKeyFn(item);\r\n\r\n    if (!result[groupingKey]) {\r\n      result[groupingKey] = [];\r\n    }\r\n\r\n    result[groupingKey].push(item);\r\n\r\n    return result;\r\n  }, {});\r\n}","import React from 'react';\r\nimport { Avatar } from 'rsuite';\r\nimport { getNameInitials } from '../misc/helpers';\r\n\r\nfunction ProfileAvatar({ name, ...avatarProps }) {\r\n  return (\r\n    <Avatar circle {...avatarProps}>\r\n      {getNameInitials(name)}\r\n    </Avatar>\r\n  );\r\n}\r\n\r\nexport default ProfileAvatar;","import React, { useState, useRef } from 'react';\r\nimport { Alert, Button, Modal } from 'rsuite';\r\nimport AvatarEditor from 'react-avatar-editor';\r\nimport { useModalState } from '../../misc/custom-hooks';\r\nimport { database, storage } from '../../misc/firebase';\r\nimport { useProfile } from '../../context/profile.context';\r\nimport ProfileAvatar from '../ProfileAvatar';\r\nimport { getUserUpdates } from '../../misc/helpers';\r\n\r\nconst fileInputTypes = '.png, .jpeg, .jpg, .jfif';\r\n\r\n\r\nconst acceptedFileTypes = [\r\n  'image/png',\r\n  'image/jpeg',\r\n  'image/jpg',\r\n  'image/jfif',\r\n];\r\nconst isValidFile = file => acceptedFileTypes.includes(file.type);\r\n\r\n\r\nconst getBlob = canvas => {\r\n  return new Promise((resolve, reject) => {\r\n    canvas.toBlob(blob => {\r\n      if (blob) {\r\n        resolve(blob);\r\n      } else {\r\n        reject(new Error('File process error'));\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\n\r\nfunction AvatarUploadBtn() {\r\n  const { isOpen, open, close } = useModalState();\r\n\r\n\r\n  const { profile } = useProfile();\r\n  const [img, setImg] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const avatarEditorRef = useRef();\r\n\r\n\r\n  const onFileInputChange = ev => {\r\n    const currFiles = ev.target.files;\r\n\r\n\r\n    if (currFiles.length === 1) {\r\n      const file = currFiles[0];\r\n\r\n\r\n      if (isValidFile(file)) {\r\n        setImg(file);\r\n\r\n\r\n        open();\r\n      } else {\r\n        Alert.warning(`Wrong file type ${file.type}`, 4000);\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  const onUploadClick = async () => {\r\n    const canvas = avatarEditorRef.current.getImageScaledToCanvas();\r\n\r\n\r\n    setIsLoading(true);\r\n    try {\r\n      const blob = await getBlob(canvas);\r\n\r\n\r\n      const avatarFileRef = storage\r\n        .ref(`/profile/${profile.uid}`)\r\n        .child('avatar');\r\n\r\n\r\n      const uploadAvatarResult = await avatarFileRef.put(blob, {\r\n        cacheControl: `public, max-age=${3600 * 24 * 3}`,\r\n      });\r\n\r\n\r\n      const downloadUrl = await uploadAvatarResult.ref.getDownloadURL();\r\n\r\n      const updates = await getUserUpdates(\r\n        profile.uid,\r\n        'avatar',\r\n        downloadUrl,\r\n        database\r\n      );\r\n\r\n      await database.ref().update(updates);\r\n\r\n      setIsLoading(false);\r\n      Alert.info('Avatar has been uploaded', 4000);\r\n    } catch (err) {\r\n      setIsLoading(false);\r\n      Alert.error(err.message, 4000);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"mt-3 text-center\">\r\n      <ProfileAvatar\r\n        src={profile.avatar}\r\n        name={profile.name}\r\n        className=\"width-200 height-200 img-fullsize font-huge\"\r\n      />\r\n      <div>\r\n        <label\r\n          htmlFor=\"avatar-upload\"\r\n          className=\"d-block cursor-pointer padded\"\r\n        >\r\n          Select new Avatar\r\n          <input\r\n            id=\"avatar-upload\"\r\n            type=\"file\"\r\n            className=\"d-none\"\r\n            accept={fileInputTypes}\r\n            onChange={onFileInputChange}\r\n          />\r\n        </label>\r\n\r\n\r\n        <Modal show={isOpen} onHide={close}>\r\n          <Modal.Header>\r\n            <Modal.Title>Adjust and upload new avatar</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <div className=\"d-flex justify-content-center align-items-center h-100\">\r\n              {img && (\r\n                <AvatarEditor\r\n                  ref={avatarEditorRef}\r\n                  image={img}\r\n                  width={200}\r\n                  height={200}\r\n                  border={10}\r\n                  borderRadius={100}\r\n                  rotate={0}\r\n                />\r\n              )}\r\n            </div>\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button\r\n              block\r\n              appearance=\"ghost\"\r\n              onClick={onUploadClick}\r\n              disabled={isLoading}\r\n            >\r\n              upload new avatar\r\n            </Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default AvatarUploadBtn;","import React from 'react';\r\nimport { Drawer, Button, Divider, Alert } from 'rsuite';\r\nimport { useProfile } from '../../context/profile.context';\r\nimport EditableInput from '../EditableInput';\r\nimport { database } from '../../misc/firebase';\r\nimport ProviderBlock from './ProviderBlock';\r\nimport AvatarUploadBtn from './AvatarUploadBtn';\r\nimport { getUserUpdates } from '../../misc/helpers';\r\n\r\nfunction Dashboard({ onSignOut }) {\r\n  const { profile } = useProfile();\r\n\r\n  const onSave = async newData => {\r\n\r\n    try {\r\n      const updates = await getUserUpdates(\r\n        profile.uid,\r\n        'name',\r\n        newData,\r\n        database\r\n      );\r\n\r\n      await database.ref().update(updates);\r\n\r\n      Alert.success('Nickname has been updated', 4000);\r\n    } catch (err) {\r\n      Alert.error(err.message, 4000);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Drawer.Header>\r\n        <Drawer.Title>Dashboard</Drawer.Title>\r\n      </Drawer.Header>\r\n\r\n      <Drawer.Body>\r\n        <h3>Hey, {profile.name}</h3>\r\n        <ProviderBlock />\r\n        <Divider />\r\n        <EditableInput\r\n          name=\"nickname\"\r\n          initialValue={profile.name}\r\n          onSave={onSave}\r\n          label={<h6 className=\"mb-2\">Nickname</h6>}\r\n        />\r\n        <AvatarUploadBtn />\r\n      </Drawer.Body>\r\n\r\n      <Drawer.Footer>\r\n        <Button block color=\"red\" onClick={onSignOut}>\r\n          Sign out\r\n        </Button>\r\n      </Drawer.Footer>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Dashboard;","import React, { useCallback } from 'react';\r\nimport { Button, Icon, Drawer, Alert } from 'rsuite';\r\nimport { useModalState, useMediaQuery } from '../../misc/custom-hooks';\r\nimport Dashboard from '.';\r\nimport { auth, database } from '../../misc/firebase';\r\nimport { isOfflineForDatabase } from '../../context/profile.context';\r\n\r\nfunction DashboardToggle() {\r\n  const { isOpen, close, open } = useModalState();\r\n  const isMobile = useMediaQuery('(max-width: 992px)');\r\n\r\n  const onSignOut = useCallback(() => {\r\n\r\n    database\r\n    .ref(`/status/${auth.currentUser.uid}`)\r\n    .set(isOfflineForDatabase)\r\n    .then(() => {\r\n      auth.signOut();\r\n      Alert.info('Signed out', 4000);\r\n      close();\r\n    })\r\n    .catch(err => {\r\n      Alert.error(err.message, 4000);\r\n    });\r\n  }, [close]);\r\n\r\n  return (\r\n    <>\r\n      <Button block color=\"blue\" onClick={open}>\r\n        <Icon icon=\"dashboard\" /> Dashboard{' '}\r\n      </Button>{' '}\r\n      <Drawer full={isMobile} show={isOpen} onHide={close} placement=\"left\">\r\n        <Dashboard onSignOut={onSignOut} />{' '}\r\n      </Drawer>{' '}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DashboardToggle;\r\n","import React, { useState, useCallback, useRef } from 'react';\r\nimport {\r\n    Button,\r\n    Icon,\r\n    Modal,\r\n    Form,\r\n    ControlLabel,\r\n    FormControl,\r\n    FormGroup,\r\n    Schema,\r\n    Alert,\r\n  } from 'rsuite';\r\n  import firebase from 'firebase/app';\r\n  import { useModalState } from '../misc/custom-hooks';\r\n  import { database, auth } from '../misc/firebase';\r\n\r\n  const { StringType } = Schema.Types;\r\n\r\n  const model = Schema.Model({\r\n      name: StringType().isRequired('Chat name is required'),\r\n      description: StringType().isRequired('Description is required'),\r\n  });\r\n\r\n  const INITIAL_FORM = {\r\n    name: '',\r\n    description: '',\r\n  }\r\n\r\n  function CreateRoomBtnModal() {\r\n      const { isOpen, open, close } = useModalState();\r\n\r\n      const [formValue, setFormValue] = useState(INITIAL_FORM);\r\n      const [isLoading, setIsLoading] = useState(false);\r\n      const formRef = useRef();\r\n\r\n      const onFormChange = useCallback(value => {\r\n        setFormValue(value);\r\n      }, []);\r\n    \r\n      const onSubmit = async () => {\r\n        if (!formRef.current.check()) {\r\n          return;\r\n        }\r\n    \r\n        setIsLoading(true);\r\n    \r\n        const newRoomdata = {\r\n          ...formValue,\r\n          createdAt: firebase.database.ServerValue.TIMESTAMP,\r\n          admin: {\r\n            [auth.currentUser.uid]: true,\r\n          },\r\n        };\r\n    \r\n        try {\r\n          await database.ref('rooms').push(newRoomdata);\r\n    \r\n          Alert.info(`${formValue.name} has been created`, 4000);\r\n    \r\n          setIsLoading(false);\r\n          setFormValue(INITIAL_FORM);\r\n          close();\r\n        } catch (err) {\r\n          setIsLoading(false);\r\n          Alert.error(err.message, 4000);\r\n        }\r\n      };\r\n    \r\n      return (\r\n        <div className=\"mt-1\">\r\n          <Button block color=\"green\" onClick={open}>\r\n            <Icon icon=\"creative\" /> Create new chat room\r\n          </Button>\r\n    \r\n          <Modal show={isOpen} onHide={close}>\r\n            <Modal.Header>\r\n              <Modal.Title>New chat room</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <Form\r\n                fluid\r\n                onChange={onFormChange}\r\n                formValue={formValue}\r\n                model={model}\r\n                ref={formRef}\r\n              >\r\n                <FormGroup>\r\n                  <ControlLabel>Room name</ControlLabel>\r\n                  <FormControl name=\"name\" placeholder=\"Enter chat room name...\" />\r\n                </FormGroup>\r\n    \r\n                <FormGroup>\r\n                  <ControlLabel>Description</ControlLabel>\r\n                  <FormControl\r\n                    componentClass=\"textarea\"\r\n                    rows={5}\r\n                    name=\"description\"\r\n                    placeholder=\"Enter room description...\"\r\n                  />\r\n                </FormGroup>\r\n              </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button\r\n                block\r\n                appearance=\"primary\"\r\n                onClick={onSubmit}\r\n                disabled={isLoading}\r\n              >\r\n                Create new chat room\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </div>\r\n      );\r\n    }\r\n    \r\n    export default CreateRoomBtnModal;\r\n  ","import React from 'react';\r\nimport TimeAgo from 'timeago-react';\r\nimport ProfileAvatar from '../ProfileAvatar';\r\n\r\nfunction RoomItem({ room }) {\r\n    const { createdAt, name, lastMessage } = room;\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"d-flex justify-content-between align-items-center\">\r\n      <h3 className=\"text-disappear\">{name}</h3>\r\n        <TimeAgo\r\n          datetime={\r\n            lastMessage ? new Date(lastMessage.createdAt) : new Date(createdAt)\r\n          }\r\n          className=\"font-normal text-black-45\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"d-flex align-items-center text-black-70\">\r\n      {lastMessage ? (\r\n          <>\r\n            <div className=\"d-flex align-items-center\">\r\n              <ProfileAvatar\r\n                src={lastMessage.author.avatar}\r\n                name={lastMessage.author.name}\r\n                size=\"sm\"\r\n              />\r\n            </div>\r\n\r\n            <div className=\"text-disappear ml-2\">\r\n              <div className=\"italic\">{lastMessage.author.name}</div>\r\n              <span>{lastMessage.text || lastMessage.file.name}</span>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <span>No messages yet...</span>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RoomItem;","import React, { createContext, useState, useEffect, useContext } from 'react';\r\nimport { database } from '../misc/firebase';\r\nimport { transformToArrWithId } from '../misc/helpers';\r\n\r\nconst RoomsContext = createContext();\r\n\r\nexport function RoomsProvider({ children }) {\r\n  const [rooms, setRooms] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const roomListRef = database.ref('rooms');\r\n\r\n    roomListRef.on('value', snap => {\r\n      const data = transformToArrWithId(snap.val());\r\n      setRooms(data);\r\n    });\r\n\r\n    return () => {\r\n      roomListRef.off();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <RoomsContext.Provider value={rooms}>{children}</RoomsContext.Provider>\r\n  );\r\n}\r\n\r\nexport const useRooms = () => useContext(RoomsContext);","import React from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { Nav, Loader } from 'rsuite';\r\nimport RoomItem from './RoomItem';\r\nimport { useRooms } from '../../context/rooms.context';\r\n\r\nfunction ChatRoomList({ aboveElHeight }) {\r\n  const rooms = useRooms();\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <Nav\r\n      appearance=\"subtle\"\r\n      vertical\r\n      reversed\r\n      className=\"overflow-y-scroll custom-scroll\"\r\n      style={{\r\n        height: `calc(100% - ${aboveElHeight}px)`,\r\n      }}\r\n      activeKey={location.pathname}\r\n    >\r\n      {!rooms && (\r\n        <Loader center vertical content=\"Loading\" speed=\"slow\" size=\"md\" />\r\n      )}\r\n      {rooms &&\r\n        rooms.length > 0 &&\r\n        rooms.map(room => (\r\n          <Nav.Item\r\n            componentClass={Link}\r\n            to={`/chat/${room.id}`}\r\n            key={room.id}\r\n            eventKey={`/chat/${room.id}`}\r\n          >\r\n            <RoomItem room={room} />\r\n          </Nav.Item>\r\n        ))}\r\n    </Nav>\r\n  );\r\n}\r\n\r\nexport default ChatRoomList;","import React, { useRef, useState, useEffect } from 'react';\r\nimport { Divider } from 'rsuite';\r\nimport DashboardToggle from './dashboard/DashboardToggle';\r\nimport CreateRoomBtnModal from './CreateRoomBtnModal'\r\nimport ChatRoomList from './rooms/ChatRoomList';\r\n\r\nfunction Sidebar() {\r\n  const topSidebarRef = useRef();\r\n  const [height, setHeight] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (topSidebarRef.current) {\r\n      setHeight(topSidebarRef.current.scrollHeight);\r\n    }\r\n  }, [topSidebarRef]);\r\n  \r\n  return (\r\n    <div className=\"h-100 pt-2\">\r\n      <div ref={topSidebarRef}>\r\n        <DashboardToggle />\r\n        <CreateRoomBtnModal />\r\n        <Divider>Join Conversation </Divider>\r\n      </div>\r\n      <ChatRoomList aboveElHeight={height} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;","import React from 'react';\r\nimport { createContext, useContextSelector } from 'use-context-selector';\r\n\r\nconst CurrentRoomContext = createContext();\r\n\r\nexport function CurrentRoomProvider({ children, data }) {\r\n  return (\r\n    <CurrentRoomContext.Provider value={data}>\r\n      {children}\r\n    </CurrentRoomContext.Provider>\r\n  );\r\n}\r\n\r\nexport const useCurrentRoom = selector =>\r\n  useContextSelector(CurrentRoomContext, selector);","import React, { memo } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Alert, Button, Drawer } from 'rsuite';\r\nimport { useCurrentRoom } from '../../../context/current-room.context';\r\nimport { useModalState, useMediaQuery } from '../../../misc/custom-hooks';\r\nimport { database } from '../../../misc/firebase';\r\nimport EditableInput from '../../EditableInput';\r\n\r\nfunction EditRoomBtnDrawer() {\r\n  const { isOpen, open, close } = useModalState();\r\n\r\n  const { chatId } = useParams();\r\n\r\n  const isMobile = useMediaQuery('(max-width: 992px)');\r\n\r\n  const name = useCurrentRoom(v => v.name);\r\n  const description = useCurrentRoom(v => v.description);\r\n\r\n  const updateData = (key, value) => {\r\n    database\r\n      .ref(`rooms/${chatId}`)\r\n      .child(key)\r\n      .set(value)\r\n      .then(() => {\r\n        Alert.success('Successfully updated', 4000);\r\n      })\r\n      .catch(err => {\r\n        Alert.error(err.message, 4000);\r\n      });\r\n  };\r\n  const onNameSave = newName => {\r\n    updateData('name', newName);\r\n  };\r\n\r\n  const onDescriptionSave = newDesc => {\r\n    updateData('description', newDesc);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button className=\"br-circle\" size=\"sm\" color=\"red\" onClick={open}>\r\n        A\r\n      </Button>\r\n\r\n      <Drawer full={isMobile} show={isOpen} onHide={close} placement=\"right\">\r\n        <Drawer.Header>\r\n          <Drawer.Title>Edit Room</Drawer.Title>\r\n        </Drawer.Header>\r\n\r\n        <Drawer.Body>\r\n          <EditableInput\r\n            initialValue={name}\r\n            onSave={onNameSave}\r\n            label={<h6 className=\"mb-2\">Name</h6>}\r\n            emptyMsg=\"Name can't be empty\"\r\n          />\r\n\r\n          <EditableInput\r\n            componentClass=\"textarea\"\r\n            rows={5}\r\n            initialValue={description}\r\n            onSave={onDescriptionSave}\r\n            emptyMsg=\"Description can't be empty\"\r\n            wrapperClassName=\"mt-3\"\r\n          />\r\n        </Drawer.Body>\r\n        <Drawer.Footer>\r\n          <Button block onClick={close}>\r\n            Close\r\n          </Button>\r\n        </Drawer.Footer>\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default memo(EditRoomBtnDrawer);\r\n","import React, { memo } from 'react';\r\nimport { Button, Modal } from 'rsuite';\r\nimport { useCurrentRoom } from '../../../context/current-room.context';\r\nimport { useModalState } from '../../../misc/custom-hooks';\r\n\r\nfunction RoomInfoBtnModal() {\r\n  const { isOpen, close, open } = useModalState();\r\n  const description = useCurrentRoom(v => v.description);\r\n  const name = useCurrentRoom(v => v.name);\r\n\r\n  return (\r\n    <>\r\n      <Button appearance=\"link\" className=\"px-0\" onClick={open}>\r\n        Room information\r\n      </Button>\r\n      <Modal show={isOpen} onHide={close}>\r\n        <Modal.Header>\r\n          <Modal.Title>About {name}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <h6 className=\"mb-1\">Description</h6>\r\n          <p>{description}</p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button block onClick={close}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default memo(RoomInfoBtnModal);","import React,{memo} from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport { ButtonToolbar, Icon } from 'rsuite';\r\nimport { useCurrentRoom } from '../../../context/current-room.context';\r\nimport {useMediaQuery} from '../../../misc/custom-hooks';\r\nimport EditRoomBtnDrawer from './EditRoomBtnDrawer';\r\nimport RoomInfoBtnModal from './RoomInfoBtnModal';\r\n\r\n\r\nfunction ChatTop() {\r\n\r\n  const name = useCurrentRoom(v => v.name);\r\n  const isAdmin = useCurrentRoom(v => v.isAdmin);\r\n  const isMobile = useMediaQuery('(max-width: 992px)')\r\n\r\n\r\n  return (\r\n    <div>\r\n\r\n\r\n      <div className='d-flex justify-content-between align-items-center'>\r\n        <h4 className='text-disappear d-flex align-item-center'>\r\n          <Icon componentClass={Link} to=\"/\" icon=\"arrow-circle-left\" size='2x' className={isMobile ? 'd-inline-block p-0 mr-2 text-blue link-unstyled' : 'd-none'}  />\r\n          <span className='text-disappear'>{name}</span>\r\n        </h4>\r\n\r\n\r\n        <ButtonToolbar className=\"ws-nowrap\">\r\n        {isAdmin && <EditRoomBtnDrawer />}\r\n        </ButtonToolbar>\r\n      </div>\r\n      <div className='d-flex justify-content-between align-items-center'>\r\n      <span>todo</span>\r\n      <RoomInfoBtnModal />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default memo(ChatTop);\r\n\r\n","import React, { useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { InputGroup, Icon, Modal, Button, Uploader, Alert } from 'rsuite';\r\nimport { useModalState } from '../../../misc/custom-hooks';\r\nimport { storage } from '../../../misc/firebase';\r\n\r\nconst MAX_FILE_SIZE = 1000 * 1024 * 5;\r\n\r\nfunction AttachmentBtnModal({ afterUpload }) {\r\n  const { chatId } = useParams();\r\n  const { isOpen, close, open } = useModalState();\r\n\r\n  const [fileList, setFileList] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const onChange = fileArr => {\r\n    const filtered = fileArr\r\n      .filter(el => el.blobFile.size <= MAX_FILE_SIZE)\r\n      .slice(0, 5);\r\n\r\n    setFileList(filtered);\r\n  };\r\n\r\n  const onUpload = async () => {\r\n    try {\r\n      const uploadPromises = fileList.map(f => {\r\n        return storage\r\n          .ref(`/chat/${chatId}`)\r\n          .child(Date.now() + f.name)\r\n          .put(f.blobFile, {\r\n            cacheControl: `public, max-age=${3600 * 24 * 3}`,\r\n          });\r\n      });\r\n\r\n      const uploadSnapshots = await Promise.all(uploadPromises);\r\n\r\n      const shapePromises = uploadSnapshots.map(async snap => {\r\n        return {\r\n          contentType: snap.metadata.contentType,\r\n          name: snap.metadata.name,\r\n          url: await snap.ref.getDownloadURL(),\r\n        };\r\n      });\r\n\r\n      const files = await Promise.all(shapePromises);\r\n\r\n      await afterUpload(files);\r\n\r\n      setIsLoading(false);\r\n      close();\r\n    } catch (err) {\r\n      setIsLoading(false);\r\n      Alert.error(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <InputGroup.Button onClick={open}>\r\n        <Icon icon=\"attachment\" />\r\n      </InputGroup.Button>\r\n      <Modal show={isOpen} onHide={close}>\r\n        <Modal.Header>\r\n          <Modal.Title>Upload files</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Uploader\r\n            autoUpload={false}\r\n            action=\"\"\r\n            fileList={fileList}\r\n            onChange={onChange}\r\n            multiple\r\n            listType=\"picture-text\"\r\n            className=\"w-100\"\r\n            disabled={isLoading}\r\n          />\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button block disabled={isLoading} onClick={onUpload}>\r\n            Send to chat\r\n          </Button>\r\n          <div className=\"text-right mt-2\">\r\n            <small>* only files less than 5 mb are allowed</small>\r\n          </div>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AttachmentBtnModal;","import React, { useState, useCallback } from 'react';\r\nimport { InputGroup, Icon, Alert } from 'rsuite';\r\nimport { ReactMic } from 'react-mic';\r\n\r\nimport { storage } from '../../../misc/firebase';\r\n\r\nfunction AudioMsgBtn({ afterUpload }) {\r\n  const { chatId } = window;\r\n\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n\r\n  const onClick = useCallback(() => {\r\n    setIsRecording(p => !p);\r\n  }, []);\r\n\r\n  const onUpload = useCallback(\r\n    async data => {\r\n      setIsUploading(true);\r\n      try {\r\n        const snap = await storage\r\n          .ref(`/chat/${chatId}`)\r\n          .child(`audio_${Date.now()}.mp3`)\r\n          .put(data.blob, {\r\n            cacheControl: `public, max-age=${3600 * 24 * 3}`,\r\n          });\r\n\r\n        const file = {\r\n          contentType: snap.metadata.contentType,\r\n          name: snap.metadata.name,\r\n          url: await snap.ref.getDownloadURL(),\r\n        };\r\n\r\n        setIsUploading(false);\r\n        afterUpload([file]);\r\n      } catch (error) {\r\n        setIsUploading(false);\r\n        Alert.error(error.message);\r\n      }\r\n    },\r\n    [afterUpload, chatId]\r\n  );\r\n\r\n  return (\r\n    <InputGroup.Button\r\n      onClick={onClick}\r\n      disabled={isUploading}\r\n      className={isRecording ? 'animate-blink' : ''}\r\n    >\r\n      <Icon icon=\"microphone\" />\r\n      <ReactMic\r\n        record={isRecording}\r\n        className=\"d-none\"\r\n        onStop={onUpload}\r\n        mimeType=\"audio/mp3\"\r\n      />\r\n    </InputGroup.Button>\r\n  );\r\n}\r\n\r\nexport default AudioMsgBtn;","import React, { useState, useCallback } from 'react';\r\nimport { InputGroup, Input, Icon, Alert } from 'rsuite';\r\nimport firebase from 'firebase/app';\r\nimport { useParams } from 'react-router';\r\nimport { useProfile } from '../../../context/profile.context';\r\nimport { database } from '../../../misc/firebase';\r\nimport AttachmentBtnModal from './AttachmentBtnModal';\r\nimport AudioMsgBtn from './AudioMsgBtn';\r\n\r\nfunction assembleMessage(profile, chatId) {\r\n  return {\r\n    roomId: chatId,\r\n    author: {\r\n      name: profile.name,\r\n      uid: profile.uid,\r\n      createdAt: profile.createdAt,\r\n      ...(profile.avatar ? { avatar: profile.avatar } : {}),\r\n    },\r\n    createdAt: firebase.database.ServerValue.TIMESTAMP,\r\n    likeCount: 0,\r\n  };\r\n}\r\n\r\n\r\nfunction Bottom() {\r\n  const [input, setInput] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const { chatId } = useParams();\r\n  const { profile } = useProfile();\r\n\r\n  const onInputChange = useCallback(value => {\r\n    setInput(value);\r\n  }, []);\r\n\r\n  const onSendClick = async () => {\r\n    if (input.trim() === '') {\r\n      return;\r\n    }\r\n\r\n    const msgData = assembleMessage(profile, chatId);\r\n    msgData.text = input;\r\n\r\n    const updates = {};\r\n\r\n    const messageId = database.ref('messages').push().key;\r\n\r\n    updates[`/messages/${messageId}`] = msgData;\r\n    updates[`/rooms/${chatId}/lastMessage`] = {\r\n      ...msgData,\r\n      msgId: messageId,\r\n    };\r\n\r\n    setIsLoading(true);\r\n    try {\r\n      await database.ref().update(updates);\r\n\r\n      setInput('');\r\n      setIsLoading(false);\r\n    } catch (err) {\r\n      setIsLoading(false);\r\n      Alert.error(err.message);\r\n    }\r\n  };\r\n\r\n  const onKeyDown = ev => {\r\n    if (ev.keyCode === 13) {\r\n      ev.preventDefault();\r\n      onSendClick();\r\n    }\r\n  };\r\n\r\n  const afterUpload = useCallback(\r\n    async files => {\r\n      setIsLoading(true);\r\n\r\n      const updates = {};\r\n\r\n      files.forEach(file => {\r\n        const msgData = assembleMessage(profile, window.chatId);\r\n        msgData.file = file;\r\n\r\n        const messageId = database.ref('messages').push().key;\r\n\r\n        updates[`/messages/${messageId}`] = msgData;\r\n      });\r\n\r\n      const lastMsgId = Object.keys(updates).pop();\r\n\r\n      updates[`/rooms/${window.chatId}/lastMessage`] = {\r\n        ...updates[lastMsgId],\r\n        msgId: lastMsgId,\r\n      };\r\n\r\n      try {\r\n        await database.ref().update(updates);\r\n        setIsLoading(false);\r\n      } catch (err) {\r\n        setIsLoading(false);\r\n        Alert.error(err.message);\r\n      }\r\n    },\r\n    [profile]\r\n  );\r\n\r\n\r\n  return (\r\n    <div>\r\n      <InputGroup>\r\n      <AttachmentBtnModal afterUpload={afterUpload} />\r\n      <AudioMsgBtn afterUpload={afterUpload} />\r\n        <Input\r\n          placeholder=\"Write a new message here...\"\r\n          value={input}\r\n          onChange={onInputChange}\r\n          onKeyDown={onKeyDown}\r\n        />\r\n\r\n        <InputGroup.Button\r\n          color=\"blue\"\r\n          appearance=\"primary\"\r\n          onClick={onSendClick}\r\n          disabled={isLoading}\r\n        >\r\n          <Icon icon=\"send\" />\r\n        </InputGroup.Button>\r\n      </InputGroup>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Bottom","import React from 'react';\r\nimport { Button, Modal } from 'rsuite';\r\nimport { useModalState } from '../../../misc/custom-hooks';\r\nimport ProfileAvatar from '../../ProfileAvatar';\r\n\r\nfunction ProfileInfoBtnModal({ profile, children, ...btnProps }) {\r\n  const { isOpen, close, open } = useModalState();\r\n\r\n  const { name, avatar, createdAt } = profile;\r\n\r\n  const shortName = profile.name.split(' ')[0];\r\n\r\n  const memberSince = new Date(createdAt).toLocaleDateString();\r\n\r\n  return (\r\n    <>\r\n      <Button {...btnProps} onClick={open}>\r\n        {shortName}\r\n      </Button>\r\n      <Modal show={isOpen} onHide={close}>\r\n        <Modal.Header>\r\n          <Modal.Title>{shortName} profile</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body className=\"text-center\">\r\n          <ProfileAvatar\r\n            src={avatar}\r\n            name={name}\r\n            className=\"width-200 height-200 img-fullsize font-huge\"\r\n          />\r\n\r\n          <h4 className=\"mt-2\">{name}</h4>\r\n\r\n          <p>Member since {memberSince}</p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          {children}\r\n          <Button block onClick={close}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProfileInfoBtnModal;","import React from 'react';\r\nimport { Whisper, Tooltip, Badge } from 'rsuite';\r\nimport { usePresence } from '../misc/custom-hooks';\r\n\r\nconst getColor = presence => {\r\n  if (!presence) {\r\n    return 'gray';\r\n  }\r\n\r\n  switch (presence.state) {\r\n    case 'online':\r\n      return 'green';\r\n    case 'offline':\r\n      return 'red';\r\n    default:\r\n      return 'gray';\r\n  }\r\n};\r\n\r\nconst getText = presence => {\r\n  if (!presence) {\r\n    return 'Unknown state';\r\n  }\r\n\r\n  return presence.state === 'online'\r\n    ? 'Online'\r\n    : `Last online ${new Date(presence.last_changed).toLocaleDateString()}`;\r\n};\r\n\r\nfunction PresenceDot({ uid }) {\r\n  const presence = usePresence(uid);\r\n\r\n  return (\r\n    <Whisper\r\n      placement=\"top\"\r\n      trigger=\"hover\"\r\n      speaker={<Tooltip>{getText(presence)}</Tooltip>}\r\n    >\r\n      <Badge\r\n        className=\"cursor-pointer\"\r\n        style={{ backgroundColor: getColor(presence) }}\r\n      />\r\n    </Whisper>\r\n  );\r\n}\r\n\r\nexport default PresenceDot;","import React from 'react';\r\nimport { Badge, Whisper, Tooltip, IconButton, Icon } from 'rsuite';\r\n\r\nfunction ConditionalBadge({ condition, children }) {\r\n  return condition ? <Badge content={condition}>{children}</Badge> : children;\r\n}\r\n\r\nfunction IconBtnControl({\r\n  isVisible,\r\n  iconName,\r\n  tooltip,\r\n  onClick,\r\n  badgeContent,\r\n  ...props\r\n}) {\r\n  return (\r\n    <div\r\n      className=\"ml-2\"\r\n      style={{ visibility: isVisible ? 'visible' : 'hidden' }}\r\n    >\r\n      <ConditionalBadge condition={badgeContent}>\r\n        <Whisper\r\n          placement=\"top\"\r\n          delay={0}\r\n          delayHide={0}\r\n          delayShow={0}\r\n          trigger=\"hover\"\r\n          speaker={<Tooltip>{tooltip}</Tooltip>}\r\n        >\r\n          <IconButton\r\n            {...props}\r\n            onClick={onClick}\r\n            circle\r\n            size=\"xs\"\r\n            icon={<Icon icon={iconName} />}\r\n          />\r\n        </Whisper>\r\n      </ConditionalBadge>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default IconBtnControl;","import React from 'react';\r\nimport { Modal } from 'rsuite';\r\nimport { useModalState } from '../../../misc/custom-hooks';\r\n\r\nfunction ImgBtnModal({ src, fileName }) {\r\n  const { isOpen, open, close } = useModalState();\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        type=\"image\"\r\n        src={src}\r\n        alt=\"file\"\r\n        onClick={open}\r\n        className=\"mw-100 mh-100 w-auto\"\r\n      />\r\n      <Modal show={isOpen} onHide={close}>\r\n        <Modal.Header>\r\n          <Modal.Title>{fileName}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <div>\r\n            <img src={src} height=\"100%\" width=\"100%\" alt=\"file\" />\r\n          </div>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <a href={src} target=\"_blank\" rel=\"noopener noreferrer\">\r\n            View original\r\n          </a>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ImgBtnModal;","import React, { memo } from 'react';\r\nimport TimeAgo from 'timeago-react';\r\nimport { Button } from 'rsuite';\r\nimport ProfileAvatar from '../../ProfileAvatar';\r\nimport ProfileInfoBtnModal from './ProfileInfoBtnModal';\r\nimport PresenceDot from '../../PresenceDot';\r\nimport { useCurrentRoom } from '../../../context/current-room.context';\r\nimport { auth } from '../../../misc/firebase';\r\nimport { useHover, useMediaQuery } from '../../../misc/custom-hooks';\r\nimport IconBtnControl from './IconBtnControl';\r\nimport ImgBtnModal from './ImgBtnModal';\r\n\r\n\r\nconst renderFileMessage = file => {\r\n  if (file.contentType.includes('image')) {\r\n    return (\r\n      <div className=\"height-220\">\r\n        <ImgBtnModal src={file.url} fileName={file.name} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (file.contentType.includes('audio')) {\r\n    return (\r\n      // eslint-disable-next-line jsx-a11y/media-has-caption\r\n      <audio controls>\r\n        <source src={file.url} type=\"audio/mp3\" />\r\n        Your browser does not support the audio element.\r\n      </audio>\r\n    );\r\n  }\r\n\r\n  return <a href={file.url}>Download {file.name}</a>;\r\n};\r\n\r\nfunction MessageItem({ message, handleAdmin, handleLike, handleDelete }) {\r\n  const { author, createdAt, text, file, likes, likeCount } = message;\r\n\r\n  const [selfRef, isHovered] = useHover();\r\n  const isMobile = useMediaQuery('(max-width: 992px)');\r\n\r\n  const isAdmin = useCurrentRoom(v => v.isAdmin);\r\n  const admin = useCurrentRoom(v => v.admin);\r\n\r\n  const isMsgAuthorAdmin = admin.includes(author.uid);\r\n  const isAuthor = auth.currentUser.uid === author.uid;\r\n  const canGrantAdmin = isAdmin && !isAuthor;\r\n\r\n  const canShowIcons = isMobile || isHovered;\r\n  const isLiked = likes && Object.keys(likes).includes(auth.currentUser.uid);\r\n\r\n  return (\r\n    <li\r\n      className={`padded mb-1 cursor-pointer ${isHovered ? 'bg-black-02' : ''}`}\r\n      ref={selfRef}\r\n    >\r\n      <div className=\"d-flex align-items-center font-bolder mb-1\">\r\n        <PresenceDot uid={author.uid} />\r\n\r\n        <ProfileAvatar\r\n          src={author.avatar}\r\n          name={author.name}\r\n          className=\"ml-1\"\r\n          size=\"xs\"\r\n        />\r\n\r\n        <ProfileInfoBtnModal\r\n          profile={author}\r\n          appearance=\"link\"\r\n          className=\"p-0 ml-1 text-black\"\r\n        >\r\n          {canGrantAdmin &&\r\n            <Button block onClick={() => handleAdmin(author.uid)} color=\"blue\" >\r\n              {isMsgAuthorAdmin ? 'Remove admin permission' : 'Give admin in this room'}\r\n            </Button>\r\n          }\r\n\r\n        </ProfileInfoBtnModal>\r\n        <TimeAgo\r\n          datetime={createdAt}\r\n          className=\"font-normal text-black-45 ml-2\"\r\n        />\r\n\r\n        <IconBtnControl\r\n          {...(isLiked ? { color: 'red' } : {})}\r\n          isVisible={canShowIcons}\r\n          iconName=\"heart\"\r\n          tooltip=\"Like this message\"\r\n          onClick={() => handleLike(message.id)}\r\n          badgeContent={likeCount}\r\n        />\r\n        {isAuthor && (\r\n          <IconBtnControl\r\n            isVisible={canShowIcons}\r\n            iconName=\"close\"\r\n            tooltip=\"Delete this message\"\r\n            onClick={() => handleDelete(message.id, file)}\r\n          />\r\n        )}\r\n      </div>\r\n\r\n      <div>\r\n        {text && <span className=\"word-breal-all\">{text}</span>}\r\n        {file && renderFileMessage(file)}\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default memo(MessageItem);","/* eslint-disable consistent-return */\r\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Alert, Button } from 'rsuite';\r\nimport { database, auth, storage } from '../../../misc/firebase';\r\nimport { transformToArrWithId, groupBy } from '../../../misc/helpers';\r\nimport MessageItem from './MessageItem';\r\n\r\nconst PAGE_SIZE = 15;\r\nconst messagesRef = database.ref('/messages');\r\n\r\nfunction shouldScrollToBottom(node, threshold = 30) {\r\n  const percentage =\r\n    (100 * node.scrollTop) / (node.scrollHeight - node.clientHeight) || 0;\r\n\r\n  return percentage > threshold;\r\n}\r\n\r\nfunction Messages() {\r\n  const { chatId } = useParams();\r\n  const [messages, setMessages] = useState(null);\r\n  const [limit, setLimit] = useState(PAGE_SIZE);\r\n  const selfRef = useRef();\r\n\r\n  const isChatEmpty = messages && messages.length === 0;\r\n  const canShowMessages = messages && messages.length > 0;\r\n\r\n  const loadMessages = useCallback(\r\n    limitToLast => {\r\n      const node = selfRef.current;\r\n\r\n      messagesRef.off();\r\n\r\n      messagesRef\r\n        .orderByChild('roomId')\r\n        .equalTo(chatId)\r\n        .limitToLast(limitToLast || PAGE_SIZE)\r\n        .on('value', snap => {\r\n          const data = transformToArrWithId(snap.val());\r\n          setMessages(data);\r\n\r\n          if (shouldScrollToBottom(node)) {\r\n            node.scrollTop = node.scrollHeight;\r\n          }\r\n        });\r\n\r\n      setLimit(p => p + PAGE_SIZE);\r\n    },\r\n    [chatId]\r\n  );\r\n\r\n  const onLoadMore = useCallback(() => {\r\n    const node = selfRef.current;\r\n    const oldHeight = node.scrollHeight;\r\n\r\n    loadMessages(limit);\r\n\r\n    setTimeout(() => {\r\n      const newHeight = node.scrollHeight;\r\n      node.scrollTop = newHeight - oldHeight;\r\n    }, 200);\r\n  }, [loadMessages, limit]);\r\n\r\n  useEffect(() => {\r\n    const node = selfRef.current;\r\n\r\n    loadMessages();\r\n\r\n    setTimeout(() => {\r\n      node.scrollTop = node.scrollHeight;\r\n    }, 200);\r\n\r\n    return () => {\r\n      messagesRef.off('value');\r\n    };\r\n  }, [loadMessages]);\r\n\r\n  const handleAdmin = useCallback(async (uid) => {\r\n    const adminRef = database.ref(`/rooms/${chatId}/admin`);\r\n\r\n    let alertMsg;\r\n\r\n    await adminRef.transaction(admin => {\r\n      \r\n      if (admin){\r\n        if(admin[uid]){\r\n          admin[uid] = null;\r\n          alertMsg = 'Admin permission removed';\r\n        }else{\r\n          admin[uid] = true;\r\n          alertMsg = 'Admin permission granted';\r\n        }\r\n      }\r\n\r\n      return admin;\r\n    })\r\n\r\n    Alert.info(alertMsg, 4000)\r\n\r\n  }, [chatId])\r\n\r\n  const handleLike = useCallback(async msgId => {\r\n    const { uid } = auth.currentUser;\r\n    const messageRef = database.ref(`/messages/${msgId}`);\r\n\r\n    let alertMsg;\r\n\r\n    await messageRef.transaction(msg => {\r\n      if (msg) {\r\n        if (msg.likes && msg.likes[uid]) {\r\n          msg.likeCount -= 1;\r\n          msg.likes[uid] = null;\r\n          alertMsg = 'Like removed';\r\n        } else {\r\n          msg.likeCount += 1;\r\n\r\n          if (!msg.likes) {\r\n            msg.likes = {};\r\n          }\r\n\r\n          msg.likes[uid] = true;\r\n          alertMsg = 'Like added';\r\n        }\r\n      }\r\n\r\n      return msg;\r\n    });\r\n\r\n    Alert.info(alertMsg, 4000);\r\n  }, []);\r\n\r\n  const handleDelete = useCallback(\r\n    async (msgId, file) => {\r\n      // eslint-disable-next-line no-alert\r\n      if (!window.confirm('Delete this message?')) {\r\n        return;\r\n      }\r\n\r\n      const isLast = messages[messages.length - 1].id === msgId;\r\n\r\n      const updates = {};\r\n\r\n      updates[`/messages/${msgId}`] = null;\r\n\r\n      if (isLast && messages.length > 1) {\r\n        updates[`/rooms/${chatId}/lastMessage`] = {\r\n          ...messages[messages.length - 2],\r\n          msgId: messages[messages.length - 2].id,\r\n        };\r\n      }\r\n\r\n      if (isLast && messages.length === 1) {\r\n        updates[`/rooms/${chatId}/lastMessage`] = null;\r\n      }\r\n\r\n      try {\r\n        await database.ref().update(updates);\r\n\r\n        Alert.info('Message has been deleted');\r\n      } catch (err) {\r\n        return Alert.error(err.message);\r\n      }\r\n\r\n      if (file) {\r\n        try {\r\n          const fileRef = storage.refFromURL(file.url);\r\n          await fileRef.delete();\r\n        } catch (err) {\r\n          Alert.error(err.message);\r\n        }\r\n      }\r\n    },\r\n    [chatId, messages]\r\n  );\r\n\r\n  const renderMessages = () => {\r\n    const groups = groupBy(messages, item =>\r\n      new Date(item.createdAt).toDateString()\r\n    );\r\n\r\n    const items = [];\r\n\r\n    Object.keys(groups).forEach(date => {\r\n      items.push(\r\n        <li key={date} className=\"text-center mb-1 padded\">\r\n          {date}\r\n        </li>\r\n      );\r\n\r\n      const msgs = groups[date].map(msg => (\r\n        <MessageItem\r\n          key={msg.id}\r\n          message={msg}\r\n          handleAdmin={handleAdmin}\r\n          handleLike={handleLike}\r\n          handleDelete={handleDelete}\r\n        />\r\n      ));\r\n\r\n      items.push(...msgs);\r\n    });\r\n\r\n    return items;\r\n  };\r\n\r\n\r\n  return (\r\n    <ul ref={selfRef} className=\"msg-list custom-scroll\">\r\n      {messages && messages.length >= PAGE_SIZE && (\r\n        <li className=\"text-center mt-2 mb-2\">\r\n          <Button onClick={onLoadMore} color=\"green\">\r\n            Load more\r\n          </Button>\r\n        </li>\r\n      )}\r\n      {isChatEmpty && <li>No messages yet</li>}\r\n      {canShowMessages && renderMessages()}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default Messages","import React, { useEffect } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Loader } from 'rsuite';\r\n\r\nimport ChatTop from '../../components/chat-window/top';\r\nimport ChatBottom from '../../components/chat-window/bottom';\r\nimport Messages from '../../components/chat-window/messages';\r\nimport { useRooms } from '../../context/rooms.context';\r\nimport { CurrentRoomProvider } from '../../context/current-room.context';\r\nimport { transformToArr } from '../../misc/helpers';\r\nimport { auth } from '../../misc/firebase';\r\n\r\nfunction Chat() {\r\n  const { chatId } = useParams();\r\n\r\n  const rooms = useRooms();\r\n\r\n  useEffect(() => {\r\n    window.chatId = chatId;\r\n  }, [chatId]);\r\n\r\n  if (!rooms) {\r\n    return <Loader center vertical size=\"md\" content=\"Loading\" speed=\"slow\" />;\r\n  }\r\n\r\n  const currentRoom = rooms.find(room => room.id === chatId);\r\n\r\n  if (!currentRoom) {\r\n    return <h6 className=\"text-center mt-page\">Chat {chatId} not found</h6>;\r\n  }\r\n\r\n  const { name, description } = currentRoom;\r\n\r\n  const admin = transformToArr(currentRoom.admin);\r\n  const isAdmin = admin.includes(auth.currentUser.uid);\r\n\r\n\r\n  const currentRoomData = {\r\n    name,\r\n    description,\r\n    admin,\r\n    isAdmin,\r\n  };\r\n\r\n  return (\r\n    <CurrentRoomProvider data={currentRoomData}>\r\n      <div className=\"chat-top\">\r\n        <ChatTop />\r\n      </div>\r\n      <div className=\"chat-middle\">\r\n        <Messages />\r\n      </div>\r\n      <div className=\"chat-bottom\">\r\n        <ChatBottom />\r\n      </div>\r\n    </CurrentRoomProvider>\r\n  );\r\n}\r\n\r\nexport default Chat","import React from 'react';\r\nimport { Grid, Row, Col } from 'rsuite';\r\nimport { Switch, Route, useRouteMatch } from 'react-router';\r\nimport Sidebar from '../../components/Sidebar';\r\nimport { RoomsProvider } from '../../context/rooms.context';\r\nimport Chat from './chat';\r\nimport { useMediaQuery } from '../../misc/custom-hooks';\r\n\r\nfunction Home() {\r\n  const isDesktop = useMediaQuery('(min-width: 992px)');\r\n  const { isExact } = useRouteMatch();\r\n\r\n  const canRenderSidebar = isDesktop || isExact;\r\n\r\n  return (\r\n    <RoomsProvider>\r\n      <Grid fluid className=\"h-100\">\r\n        <Row className=\"h-100\">\r\n          {canRenderSidebar && (\r\n            <Col xs={24} md={8} className=\"h-100\">\r\n              <Sidebar />\r\n            </Col>\r\n          )}\r\n\r\n          <Switch>\r\n            <Route exact path=\"/chat/:chatId\">\r\n              <Col xs={24} md={16} className=\"h-100\">\r\n                <Chat />\r\n              </Col>\r\n            </Route>\r\n            <Route>\r\n              {isDesktop && (\r\n                <Col xs={24} md={16} className=\"h-100\">\r\n                  <h6 className=\"text-center mt-page\">Please select chat</h6>\r\n                </Col>\r\n              )}\r\n            </Route>\r\n          </Switch>\r\n        </Row>\r\n      </Grid>\r\n    </RoomsProvider>\r\n  );\r\n}\r\n\r\nexport default Home;","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { Container, Loader } from 'rsuite';\r\nimport { useProfile } from '../context/profile.context';\r\n\r\nfunction PrivateRoute({ children, ...routeProps }) {\r\n\r\n    const { profile, isLoading } = useProfile();\r\n\r\n    if (isLoading && !profile) {\r\n        return (\r\n            <Container>\r\n                <Loader center vertical size=\"md\" content=\"Loading\" speed=\"slow\" />\r\n            </Container>\r\n        );\r\n    }\r\n\r\n    if (!profile && !isLoading) {\r\n        return <Redirect to=\"/signin\" />;\r\n    }\r\n    return (\r\n        <Route {...routeProps}>{children}</Route>\r\n    )\r\n}\r\n\r\nexport default PrivateRoute","import React from 'react'\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { Container, Loader } from 'rsuite';\r\nimport { useProfile } from '../context/profile.context';\r\n\r\nfunction PrivateRoute({ children, ...routeProps }) {\r\n\r\n    const { profile, isLoading } = useProfile();\r\n\r\n    if (isLoading && !profile) {\r\n        return (\r\n          <Container>\r\n            <Loader center vertical size=\"md\" content=\"Loading\" speed=\"slow\" />\r\n          </Container>\r\n        );\r\n      }\r\n    \r\n      if (profile && !isLoading) {\r\n        return <Redirect to=\"/\" />;\r\n    }\r\n  return (\r\n    <Route { ...routeProps }>{children}</Route>\r\n  )\r\n}\r\n\r\nexport default PrivateRoute","import React from 'react';\n\nimport 'rsuite/dist/styles/rsuite-default.css';\nimport './styles/main.scss';\nimport { Switch } from 'react-router';\nimport SignIn from './pages/SignIn';\nimport Home from './pages/Home';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\nimport { ProfileProvider } from './context/profile.context';\n\nfunction App() {\n  return (\n    <ProfileProvider>\n    <Switch>\n      <PublicRoute path=\"/signin\">\n        <SignIn />\n      </PublicRoute>\n      <PrivateRoute path=\"/\">\n        <Home />\n      </PrivateRoute>\n    </Switch>\n  </ProfileProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import { BrowserRouter } from 'react-router-dom';\nimport { HashRouter } from 'react-router-dom/cjs/react-router-dom.min';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <HashRouter>\n        <App />\n    </HashRouter>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}